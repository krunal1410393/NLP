- Project : Bag of Words meets Bag of Popcorn
The labeled data set consists of 50,000 IMDB movie reviews, specially selected for sentiment analysis. 
The sentiment of reviews is binary, meaning the IMDB rating < 5 results in a sentiment score of 0, 
and rating >=7 have a sentiment score of 1. No individual movie has more than 30 reviews. 
The 25,000 review labeled training set does not include any of the same movies as the 25,000 
review test set. In addition, there are another 50,000 IMDB reviews provided without any rating labels.


- File descriptions
labeledTrainData - The labeled training set. The file is tab-delimited and has a header row followed by 25,000 rows containing an id, sentiment, and text for each review.  
testData - The test set. The tab-delimited file has a header row followed by 25,000 rows containing an id and text for each review. Your task is to predict the sentiment for each one. 
unlabeledTrainData - An extra training set with no labels. The tab-delimited file has a header row followed by 50,000 rows containing an id and text for each review. 
sampleSubmission - A comma-delimited sample submission file in the correct format.

- Data fields
id - Unique ID of each review
sentiment - Sentiment of the review; 1 for positive reviews and 0 for negative reviews
review - Text of the review



- Project Explanation(Project Screenshorts) 

Slide:1-2 Introduction

Slide:3
- importing packages and data
- this packages numpy for linear algebra and pandas for data processing importing all Datafiles 
- matplotlib and seaborn for data Visualization

slide:4-5
- Reading the train and test data 

slide:6
- here we have to clean the Data and Text Preprocessing important for dataset    
- and do Tokenization (convert our review to lower case and split them into individual words)

slide:7
- here i remove Remove non-letters then
- Convert to lower case, split into individual words
- Join the words back into one string separated by space 

slide:8
- Get the number of reviews based on the dataframe column size
- Call our function for each one, and add the result to the list of clean reviews

Slide:9
- Implement a Random Forest classifier with 100 trees and  
- Fit the forest to the training set, using the bag of words asfeatures and the sentiment 
  labels as the response variableThis may take a few minutes to run.
  
Slide:10
- Get a bag of words for the test set, and convert to a numpy array
- and now we have to take final Train output.

Slide:11
- final output based on Machie Learning Algorithm.
   
